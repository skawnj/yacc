Help on module yacc:

NAME
    yacc

DESCRIPTION
    # -*- coding: utf-8 -*-
    # Last Modified: 2016-06-22 01:28

FUNCTIONS
    get_restr_detail(restr_id, session_id=None, hit_or_not=True)
        * 모듈명: 식당 상세 조회
        * 입력: 식당 ID, 세션 ID, 히트 여부
        * 출력(JSON): 식당 ID, 식당명, 주소, 전화번호, X 좌표, Y 좌표, 본점 거리, 별관 거리, 갱신 시간, 평균 평점, 히트 점수, 다이닝코드 페이지 URL, 썸네일 이미지 URL, 등록 리뷰(평점) 목록
            - [('R20160604010629860275', '커피소녀', '여의도 · 서울특별시 영등포구 여의도동 17', '02-780-1199', 126.9187317, 37.5256864, 0.003325272972255698, 0.003931706054635711, '20160604010629861277', 2.8000000000000003, 3, 'http://diningcode.com/profile.php?rid=F4YpWDL04ai9&rank=80', 'https://d2t7cq5f1ua57i.cloudfront.net/images/r_images/55803/54313/55803_54313_77_0_8901_2014415123814913_300x200.jpg'), [('session_no_7777', 'R20160604010629860275', '20160604010630279555', 3.9, 'I do not know why people dislike here. It is of my fav place.'), ('session_no_2468', 'R20160604010629860275', '20160604010630243531', 2.5, 'So so... :d'), ('session_no_1357', 'R20160604010629860275', '20160604010630212510', 2.0, 'I must got paid by them... Terrible.')]]
        * 예외: 식당 ID가 조회 불가하면(미등록 건) None 반환
        * 설명
            - 히트 여부가 False이면 히트 처리하지 않음.
            - 히트 여부가 True이면서 세션 ID가 None이면 본 모듈의 전체 로직 자체를 수행치 않음.
            - 리뷰가 전무한 식당은 평균 평점이 -1임.
        * 미완성: 다이닝코드 등에서 실시간으로 더 취해 올 실시간 정보 입수 로직 추가 예정
    
    get_restr_list(count=10, option=None, session_id=None)
        * 모듈명: 식당 목록 조회
        * 입력: 개수, 옵션, 세션 ID
        * 출력(JSON): 식당 ID, 식당명, 주소, 전화번호, X 좌표, Y 좌표, 본점 거리, 별관 거리, 갱신 시간, 평균 평점, 히트 점수, 다이닝코드 페이지 URL, 썸네일 이미지 URL, ...(목록)
            - [('R20160604010629153804', '보나베띠 여의도점', '여의도 · 서울시 영등포구 여의도동 16-2 1F (중소기업중앙회신관 건물 1층)', '02-780-3886', 126.9227388, 37.5281813, 0.001981652895951576, 0.0007904331217772451, '20160604010629153804', -1.0, 0, 'http://diningcode.com/profile.php?rid=fCBYskxnOCky&rank=27', 'https://d2t7cq5f1ua57i.cloudfront.net/images/r_images/53247/58022/53247_58022_86_5_5326_201572673841549_300x200.jpg'), ('R20160604010629558074', '달맞이 꽃게탕', '여의도 · 서울특별시 영등포구 여의도동 16-2', '02-3775-0118', 126.9227388, 37.5281813, 0.001981652895951576, 0.0007904331217772451, '20160604010629558074', -1.0, 0, 'http://diningcode.com/profile.php?rid=F8IzY8XHgHtO&rank=58', 'https://d2t7cq5f1ua57i.cloudfront.net/images/r_images/57189/50096/57189_50096_77_0_3036_201631802252364_300x200.jpg'), ...]
        * 예외: 조회된 내용이 없으면(0건) None 반환
        * 설명
            - 옵션
                - 'recent': 최근 갱신된 순서로 정렬
                - 'random': 임의 선택
                - 'rating': 평균 평점 높은 순서로 정렬
                - 'hit': 히트 점수 높은 순서로 정렬
                - 'closest_hq': 본점 거리 가까운 순서로 정렬
                - 'closest_it': 별관 거리 가까운 순서로 정렬
                - 'recommend': 데이터 기반 추천(미완성)
            - 리뷰가 전무한 식당은 평균 평점이 -1임.
            - '뭐 먹지?' 기능 구현은 n개짜리 임의 선택 목록을 조회한 후 순차적으로 상세 조회하는 식으로 해야 할 것임.
        * 미완성: 데이터 기반 추천 기능 구현 예정. 세션 ID 주어진 경우 사용자별 처리가 현재는 완전 미구현 상태
    
    get_session_id(nickname)
        * 모듈명: 세션 ID 조회
        * 입력: 닉네임
        * 출력(JSON): 세션 ID
        * 예외: 닉네임으로 조회되지 않으면(미등록 건) None 반환
        * 설명
            - 사용자가 기억할 것으로 기대되는 닉네임을 바탕으로 세션 ID를 조회해 옴.
            - 사용자가 닉네임을 기반으로 여러 장치에서 서비스를 이용할 때, 기존 사용하던 동일 세션을 맺을 수 있게 해 줌.
            - 본 모듈은 닉네임 기반으로 세션 ID를 조회해 줄 뿐이며, 조회 결과를 바탕으로 세션 맺는 일은 모듈 호출자가 할 것임.
            - 닉네임은 영문 문자열이며 '형용사 동물' 임의 조합으로 생성됨.(최초 세션 ID 등록 시 정의)
                - 사례: Scary Insect, Easy-Going American Cocker Spaniel, Marvelous African Penguin
    
    get_user_info(session_id)
        * 모듈명: 사용자 정보 조회
        * 입력: 세션 ID
        * 출력(JSON): 세션 ID, 별명, 등록시간, 최종접속시간, 등록 리뷰(평점) 목록
            - [('session_no_1357', 'Known Jackal', '20160604010628722516', '20160604010630200502'), [('session_no_1357', 'R20160604010629860275', '20160604010630212510', 2.0, 'I must got paid by them... Terrible.'), ('session_no_1357', 'R20160604010629114778', '20160604010630180489', 4.1, 'Fabulous! Recommended!'), ('session_no_1357', 'R20160604010629474018', '20160604010630148467', 3.7, 'Not so bad.')]]
        * 예외: 세션 ID가 조회 불가하면(미등록 건) None 반환
        * 설명
            - 타 모듈은 주어진 세션 ID를 확인해 미등록 건이면 등록시킨 후 로직 처리를 함.
            - 본 모듈은 이미 등록된 사용자의 정보를 확인하기 위함임. 따라서 미등록 세션 ID라도 등록 처리하지 않음.
            - 사용자가 등록한 리뷰(평점)들을 최근 등록된 순으로 나열해 같이 반환함.
    
    hit_restr(restr_id, session_id)
        * 모듈명: 식당 히트 처리
        * 입력: 식당 ID, 세션 ID
        * 출력(JSON): N/A
        * 설명
            - 히트는 식당 상세 조회 시 통상 자동으로 이뤄짐.(예외 처리도 가능함.)
            - 식당 상세 조회 외 경우에서 히트 처리를 할 경우는 직접 이 모듈을 호출함.(보통은 직접 호출할 일이 없을 것임.)
            - 히트 시 처리 내용
                1. 식당별 히트 점수 1 증가
                2. 사용자별 해당 식당 열람 내역 추가
                3. 직전의 열람 내역의 체류 시간 갱신(0 ~ 180초)
    
    search_restr(keyword)
        * 모듈명: 식당 검색
        * 입력: 키워드(키워드 목록 또는 공백으로 분리된 키워드들로 이뤄진 문자열)
        * 출력(JSON): 식당 ID, 키워드 일치 빈도수, 키워드 일치 현황, ...(목록)
            - [['R20160604010628862610', 3, {('NAME', '제일제면소 여의도IFC점'), ('ADDR', 'ifc몰 · 서울시 영등포구 여의도동 23 IFC몰 L3층')}], ['R20160604010629433991', 2, {('ADDR', 'ifc몰 · 서울특별시 영등포구 여의도동 23'), ('NAME', '푸드엠파이어 IFC점')}], ['R20160604010628996699', 1, {('ADDR', 'ifc몰 · 서울특별시 영등포구 여의도동 23')}], ['R20160604010628908640', 1, {('NAME', '정인면옥')}], ['R20160604010628963677', 1, {('ADDR', 'ifc몰 · 서울시 영등포구 여의도동 23')}]]
        * 예외: 조회된 식당이 없을 때, 또는 인자로 주어진 키워드의 형식이 부적절하면, None 반환
        * 설명
            - 식당명, 주소, 전화번호를 대상으로 검색
            - 키워드가 다수일 때는 각각에 대해 검색을 수행
            - 조회 결과 목록은 일치된 검색어가 많은 것을 우선으로 정렬함.
        * 미완성
            - 식당 태그, 설명 텍스트 등에 대해서도 검색 수행
            - 사용자 리뷰 등에서도 검색할 수 있게 함.
    
    set_user_review(session_id, restr_id, rating, review_txt)
        * 모듈명: 사용자 리뷰 등록
        * 입력: 세션 ID, 식당 ID, 평점, 리뷰 문구
        * 출력(JSON): N/A
        * 설명
            - 평점 등록과 리뷰 문구 등록은 함께 발생함.
            - 등록된 평점는 동 식당의 평균 평점을 바로 갱신시킴.
            - 따라서 리뷰 문구는 공백 입력되어도 무관하나 평점 입력 시에는 사용자 유의가 필요함.

